{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python Debugger: Module",
            "type": "debugpy",
            "request": "launch",
            "module": "pytest",
            "args": ["${file}"],
            "env": {
                "PYTHONPATH": "${workspaceFolder}",
                "REQUESTS_CA_BUNDLE": "/usr/local/share/ca-certificates/fireware-https-proxy-ca.crt"
                
            },
            "justMyCode": true
        },
        {
            "name": "Python File Debugger",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}", // Esto ejecuta el archivo que esté abierto
            "args": ["config/my_scene.toml"],
            // "args": ["data/class_balance.json"],
            // "args": ["config/segformer_nu.toml"],
            "console": "integratedTerminal",
            "env": {
                "PYTHONPATH": "${workspaceFolder}", // Establecer el PYTHONPATH para todo el proyecto
                "REQUESTS_CA_BUNDLE": "/etc/ssl/certs/ca-certificates.crt",
                "CUDA_VISIBLE_DEVICES": "1,2",
                //"CUDA_LAUNCH_BLOCKING": "1"
            }
        },
        {
            "name": "Python Main Debugger",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/src/main.py", // Esto ejecuta el archivo que esté abierto
            "console": "integratedTerminal",
            "env": {
                "PYTHONPATH": "${workspaceFolder}", // Establecer el PYTHONPATH para todo el proyecto
                "REQUESTS_CA_BUNDLE": "/usr/local/share/ca-certificates/fireware-https-proxy-ca.crt",
            }
        },
        {
            "name": "C++ bev2seg_2_tracking Debug",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/tracking/build/bev2seg_2_tracking",  // Ensure correct path
            "args": ["./tmp/my_scene/generated/tracking"],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "Tracking CMake build"
        }
    ]
}